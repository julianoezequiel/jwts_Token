package com.example;

import java.util.Collection;
import java.util.HashMap;
import java.util.Map;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

@RestController
@RequestMapping(value = "/clientes")
public class ClienteController {

	Map<Integer, Cliente> clientes = new HashMap<>();
	Integer proximoId = 1;

	private Cliente cadastrar(Cliente cliente) {

		cliente.setId(proximoId);
		clientes.put(proximoId, cliente);
		proximoId++;
		return cliente;

	}

	private Collection<Cliente> buscartodos() {
		return clientes.values();
	}

	private void excluir(Cliente cliente) {
		clientes.remove(cliente.getId());
	}

	private Cliente buscarPorId(Integer id) {
		return clientes.get(id);
	}
	
	private Cliente alterar(Cliente cliente){
		clientes.put(cliente.getId(), cliente);
		return cliente;
	}

	@RequestMapping(method = RequestMethod.POST, consumes = MediaType.APPLICATION_JSON_UTF8_VALUE, produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
	public ResponseEntity<Cliente> cadastrarCliente(@RequestBody Cliente cliente) {
		Cliente c = cadastrar(cliente);
		return new ResponseEntity<Cliente>(c, HttpStatus.CREATED);
	}

	@RequestMapping(method = RequestMethod.GET, produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
	public ResponseEntity<Collection<Cliente>> listarClientes() {
		return new ResponseEntity<>(buscartodos(), HttpStatus.OK);
	}

	@RequestMapping(method = RequestMethod.DELETE, value = "{id}")
	public ResponseEntity<Cliente> excluirCliente(@PathVariable Integer id) {
		Cliente c = buscarPorId(id);
		if (c == null) {
			return new ResponseEntity<>(HttpStatus.NO_CONTENT);
		}
		excluir(c);
		return new ResponseEntity<>(HttpStatus.OK);

	}

	@RequestMapping(method = RequestMethod.GET, value = "{id}")
	public ResponseEntity<Cliente> listarClientes(@PathVariable Integer id) {

		Cliente c = buscarPorId(id);
		if (c != null) {
			return new ResponseEntity<>(c, HttpStatus.OK);
		}
		return new ResponseEntity<>(HttpStatus.NO_CONTENT);
	}
	
	@RequestMapping(method = RequestMethod.PUT)
	public ResponseEntity<Cliente> alterarCliente(@RequestBody Cliente cliente) {

		Cliente c = alterar(cliente);
		if (c != null) {
			return new ResponseEntity<>(c, HttpStatus.OK);
		}
		return new ResponseEntity<>(HttpStatus.NO_CONTENT);
	}

}
